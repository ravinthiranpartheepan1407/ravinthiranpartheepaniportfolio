<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />
    <title>Ravinthiran Partheepan - Celestrak</title>
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">

    <link href="/assets/vendor/aoss/aos.css" rel="stylesheet">
    <link href="/assets/vendor/bootstraps/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/vendor/bootstrap-iconss/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/vendor/boxiconss/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/vendor/swipers/swiper-bundle.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <link href="/images/icon.png" rel="icon">
    <link href="/images/icon.png" rel="apple-touch-icon">

    <link href="/assets/css/styles.css" rel="stylesheet">
      <script src="/assets/js/mains.js"></script>

    <style>
      html,
      body,
      #viewDiv {
        padding: 0;
        margin: 0;
        height: 100%;
        width: 100%;
      }
      .esri-attribution__powered-by{
        visibility: hidden;
      }
      .esri-attribution__sources{
        visibility: hidden;
      }
    </style>

    <link rel="stylesheet" href="https://js.arcgis.com/4.21/esri/themes/light/main.css" />
    <script src="https://js.arcgis.com/4.21/"></script>
    <script src="https://developers.arcgis.com/javascript/latest/sample-code/satellites-3d/live/satellite.js"></script>

    <script>
      require([
        "esri/Map",
        "esri/views/SceneView",
        "esri/layers/GraphicsLayer",
        "esri/Graphic",
        "dojo/text!https://developers.arcgis.com/javascript/latest/sample-code/satellites-3d/live/brightest.txt"
      ], (Map, SceneView, GraphicsLayer, Graphic, data) => {
        const map = new Map({
          basemap: "satellite"
        });

        const view = new SceneView({
          container: "viewDiv",
          map: map,
          constraints: {
            altitude: {
              max: 12000000000 // meters
            }
          },

          popup: {
            dockEnabled: true,
            dockOptions: {
              breakpoint: false
            }
          }
        });

        view.popup.watch("selectedFeature", () => {
          satelliteTracks.removeAll();
        });

        view.popup.on("trigger-action", (event) => {
          if (event.action.id === "track") {
            satelliteTracks.removeAll();

            let graphic = view.popup.selectedFeature;
            let trackFeatures = [];

            for (let i = 0; i < 60 * 24; i++) {
              let loc = null;
              try {
                loc = getSatelliteLocation(
                  new Date(graphic.attributes.time + i * 1000 * 60),
                  graphic.attributes.line1,
                  graphic.attributes.line2
                );
              } catch (error) {}

              if (loc !== null) {
                trackFeatures.push([loc.x, loc.y, loc.z]);
              }
            }

            let track = new Graphic({
              geometry: {
                type: "polyline",
                paths: [trackFeatures]
              },
              symbol: {
                type: "line-3d",
                symbolLayers: [
                  {
                    type: "line",
                    material: {
                      color: [192, 192, 192, 0.5]
                    },
                    size: 3
                  }
                ]
              }
            });

            satelliteTracks.add(track);
          }
        });

        const satelliteLayer = new GraphicsLayer();
        const satelliteTracks = new GraphicsLayer();

        map.addMany([satelliteLayer, satelliteTracks]);


        const lines = data.split("\n");
        const count = (lines.length / 3).toFixed(0);

        for (let i = 0; i < count; i++) {
          let commonName = lines[i * 3 + 0];
          let line1 = lines[i * 3 + 1];
          let line2 = lines[i * 3 + 2];
          let time = Date.now();



          const designator = line1.substring(9, 16);
          const launchYear = designator.substring(0, 2);
          const fullLaunchYear = Number(launchYear) >= 57 ? `19${launchYear}` : `20${launchYear}`;
          const launchNum = Number(designator.substring(2, 5)).toString();
          const noradId = Number(line1.substring(3, 7));
          let satelliteLoc = null;

          try {
            satelliteLoc = getSatelliteLocation(new Date(time), line1, line2);
          } catch (error) {}

          if (satelliteLoc !== null) {
            let template = {

              title: "{name}",
              content: "Launch number {number} of {year}",
              actions: [
                {

                  title: "Show Satellite Track",
                  id: "track",
                  className: "esri-icon-globe"
                }
              ]
            };

            let graphic = new Graphic({
              geometry: satelliteLoc,
              symbol: {
                type: "picture-marker",
                url: "https://developers.arcgis.com/javascript/latest/sample-code/satellites-3d/live/satellite.png",
                width: 48,
                height: 48
              },
              attributes: {
                name: commonName,
                year: fullLaunchYear,
                id: noradId,
                number: launchNum,
                time: time,
                line1: line1,
                line2: line2
              },
              popupTemplate: template
            });

            satelliteLayer.add(graphic);
          }
        }

        function getSatelliteLocation(date, line1, line2) {

          const satrec = satellite.twoline2satrec(line1, line2);
          const position_and_velocity = satellite.propagate(
            satrec,
            date.getUTCFullYear(),
            date.getUTCMonth() + 1,
            date.getUTCDate(),
            date.getUTCHours(),
            date.getUTCMinutes(),
            date.getUTCSeconds()
          );
          const position_eci = position_and_velocity.position;

          const gmst = satellite.gstime_from_date(
            date.getUTCFullYear(),
            date.getUTCMonth() + 1,
            date.getUTCDate(),
            date.getUTCHours(),
            date.getUTCMinutes(),
            date.getUTCSeconds()
          );

          const position_gd = satellite.eci_to_geodetic(position_eci, gmst);

          let longitude = position_gd.longitude;
          let latitude = position_gd.latitude;
          let height = position_gd.height;
          if (isNaN(longitude) || isNaN(latitude) || isNaN(height)) {
            return null;
          }
          const rad2deg = 180 / Math.PI;
          while (longitude < -Math.PI) {
            longitude += 2 * Math.PI;
          }
          while (longitude > Math.PI) {
            longitude -= 2 * Math.PI;
          }
          return {
            type: "point",
            x: rad2deg * longitude,
            y: rad2deg * latitude,
            z: height * 1000
          };
        }
      });
    </script>
  </head>

  <header id="header" class="fixed-top d-flex align-items-center">
    <div class="container d-flex justify-content-between align-items-center">

      <div class="logo">
        <h1><a href="/">Ravinthiran Partheepan</a></h1>
      </div>

      <nav id="navbar" class="navbar">
        <ul>
          <li><a class="active " href="index.html">Home</a></li>
          <li><a href="/npm">My-NPM-Packages</a></li>
          <li><a href="/ethapp">Ethereum Shop</a></li>
          <li><a href="https://rarible.com/token/0xf6793da657495ffeff9ee6350824910abc21356c:89924258366811623875109034533533048737172702265033712914275818847697259986946?tab=details">NFT Shop</a></li>
          <li><a href="/shop">Shop</a></li>
          <li><a href="/works">Works</a></li>
          <li><a href="/contact">Contact</a></li>
          <li class="dropdown"><a href="/works"><span>Github</span> <i class="bi bi-chevron-down"></i></a>
            <ul>
              <li><a href="https://github.com/ravinthiranpartheepan1407/VPS_mongodb">VPS - Full Stack Web</a></li>
              <li><a href="https://github.com/ravinthiranpartheepan1407/Data-Science-Projects">AI & Machine Learning</a></li>
              <li><a href="https://github.com/ravinthiranpartheepan1407/Full_Stack_Web_Development_Apps">Blockchain Development</a></li>


            </ul>
          </li>

        </ul>
        <i class="bi bi-list mobile-nav-toggle"></i>
      </nav>

    </div>
  </header>

  <body>

    <div id="viewDiv"></div>
  </body>
  <footer class="footer" role="contentinfo">
    <div class="container">
      <div class="row">
        <div class="col-md-4 mb-4 mb-md-0">
          <h3>About Ravinthiran Partheepan</h3>
          <p style="text-align: justify !important;">I am an Artificial Intelligence Researcher, Blockhain ETH Smartcontracts And Dapps Developer, Full Stack Developer, Comic Book Writer and VFX Film Maker</p>
          <p class="social">
            <a href="#"><span class="bi bi-twitter"></span></a>
            <a href="#"><span class="bi bi-facebook"></span></a>
            <a href="#"><span class="bi bi-instagram"></span></a>
            <a href="https://www.linkedin.com/in/ravinthiran-partheepan-8a5100131"><span class="bi bi-linkedin"></span></a>
          </p>
        </div>
        <div class="col-md-7 ms-auto">
          <div class="row site-section pt-0">
            <div class="col-md-4 mb-4 mb-md-0">
              <h3>Navigation</h3>
              <ul class="list-unstyled">
                <li><a href="/shop">Shop</a></li>
                <li><a href="/works">Works</a></li>
                <li><a href="/home"></a>Home</li>
                <li><a href="/contact">Contact</a></li>
              </ul>
            </div>

            <div class="col-md-4 mb-4 mb-md-0">
              <h3>Shop</h3>
              <ul class="list-unstyled">
                <li><a href="/shop">Shop</a></li>
                <li><a href="/ethapp">Ethereum Dapp</a></li>
                <li><a href="/home"></a>Home</li>
                <li><a href="/contact">Contact</a></li>
              </ul>
            </div>

            <div class="col-md-4 mb-4 mb-md-0">
              <h3>Downloads</h3>
              <ul class="list-unstyled">
                <li><a href="#">Get from the Play Store</a></li>
              </ul>
            </div>
          </div>
        </div>
      </div>

      <div class="row justify-content-center text-center">
        <div class="col-md-7">
          <p class="copyright">&copy; Copyright Ravinthiran Partheepan. All Rights Reserved</p>
          <div class="credits">

            Developed by <a href="/">Ravinthiran Partheepan</a>
          </div>
        </div>
      </div>

    </div>
  </footer>
  <script>
    (function($){
      $(document).on('contextmenu', 'body', function() {
          return false;
      })
    })(jQuery);
  </script>

</body>

</html>
